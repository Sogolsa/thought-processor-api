{"version":3,"file":"index.js","names":["_express","_interopRequireDefault","require","_mongoose","_cors","_dotenv","_swaggerUiExpress","_yamljs","_routes","e","__esModule","dotenv","config","app","express","swaggerDocument","yaml","load","use","swaggerUi","serve","setup","cors","urlencoded","extended","json","mongoose","connect","process","env","CONNECTION_URI","then","console","log","err","routes","req","res","send","next","error","stack","status","PORT","listen","concat"],"sources":["../server/index.js"],"sourcesContent":["import express from 'express';\r\nimport mongoose from 'mongoose';\r\nimport cors from 'cors';\r\nimport dotenv from 'dotenv';\r\nimport swaggerUi from 'swagger-ui-express';\r\nimport yaml from 'yamljs';\r\n\r\nimport routes from './src/routes/routes';\r\nimport './passport';\r\n\r\n// Load environment variables from .env file\r\ndotenv.config();\r\n\r\n// initializing express application\r\nconst app = express();\r\n\r\n// Importing Yaml file\r\nconst swaggerDocument = yaml.load('./swagger.yaml');\r\n\r\n// Setting up Swagger UI middleware\r\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocument));\r\n\r\n// Middleware setup\r\napp.use(cors());\r\napp.use(express.urlencoded({ extended: true })); // parses incoming requests with URL-encoded payloads (form data)\r\napp.use(express.json()); //parses incoming requests with JSON payloads\r\n\r\n// Connecting to the database locally\r\n// mongoose\r\n//   .connect('mongodb://localhost:27017/TOAdb', {\r\n//     useNewUrlParser: true,\r\n//     useUnifiedTopology: true,\r\n//   })\r\n//   .then(() => console.log('MongoDB connected.'))\r\n//   .catch((err) => console.log('MongoDB connection error: ', err));\r\n\r\n// Connecting the application to mongoDB atlas\r\nmongoose\r\n  .connect(process.env.CONNECTION_URI)\r\n  .then(() => console.log('MongoDB connected.'))\r\n  .catch((err) => console.log('MongoDB connection error: ', err));\r\n\r\n// Running the routes inside the app\r\nroutes(app);\r\n\r\n// First Endpoint\r\napp.use('/', (req, res) => {\r\n  res.send('Welcome to Thought Tracking Journal API!');\r\n});\r\n\r\napp.use((err, req, res, next) => {\r\n  console.error(err.stack);\r\n  res.status(500).send('Something broke!');\r\n});\r\n\r\n// Port setup\r\nconst PORT = process.env.PORT || 3000;\r\n\r\n// To know the server is running\r\napp.listen(PORT, () => {\r\n  console.log(`Your sever is running on port ${PORT}`);\r\n});\r\n"],"mappings":";;AAAA,IAAAA,QAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,SAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,KAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,OAAA,GAAAJ,sBAAA,CAAAC,OAAA;AACA,IAAAI,iBAAA,GAAAL,sBAAA,CAAAC,OAAA;AACA,IAAAK,OAAA,GAAAN,sBAAA,CAAAC,OAAA;AAEA,IAAAM,OAAA,GAAAP,sBAAA,CAAAC,OAAA;AACAA,OAAA;AAAoB,SAAAD,uBAAAQ,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,gBAAAA,CAAA;AAEpB;AACAE,kBAAM,CAACC,MAAM,CAAC,CAAC;;AAEf;AACA,IAAMC,GAAG,GAAG,IAAAC,mBAAO,EAAC,CAAC;;AAErB;AACA,IAAMC,eAAe,GAAGC,kBAAI,CAACC,IAAI,CAAC,gBAAgB,CAAC;;AAEnD;AACAJ,GAAG,CAACK,GAAG,CAAC,WAAW,EAAEC,4BAAS,CAACC,KAAK,EAAED,4BAAS,CAACE,KAAK,CAACN,eAAe,CAAC,CAAC;;AAEvE;AACAF,GAAG,CAACK,GAAG,CAAC,IAAAI,gBAAI,EAAC,CAAC,CAAC;AACfT,GAAG,CAACK,GAAG,CAACJ,mBAAO,CAACS,UAAU,CAAC;EAAEC,QAAQ,EAAE;AAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACjDX,GAAG,CAACK,GAAG,CAACJ,mBAAO,CAACW,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACAC,oBAAQ,CACLC,OAAO,CAACC,OAAO,CAACC,GAAG,CAACC,cAAc,CAAC,CACnCC,IAAI,CAAC;EAAA,OAAMC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;AAAA,EAAC,SACxC,CAAC,UAACC,GAAG;EAAA,OAAKF,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEC,GAAG,CAAC;AAAA,EAAC;;AAEjE;AACA,IAAAC,kBAAM,EAACtB,GAAG,CAAC;;AAEX;AACAA,GAAG,CAACK,GAAG,CAAC,GAAG,EAAE,UAACkB,GAAG,EAAEC,GAAG,EAAK;EACzBA,GAAG,CAACC,IAAI,CAAC,0CAA0C,CAAC;AACtD,CAAC,CAAC;AAEFzB,GAAG,CAACK,GAAG,CAAC,UAACgB,GAAG,EAAEE,GAAG,EAAEC,GAAG,EAAEE,IAAI,EAAK;EAC/BP,OAAO,CAACQ,KAAK,CAACN,GAAG,CAACO,KAAK,CAAC;EACxBJ,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACJ,IAAI,CAAC,kBAAkB,CAAC;AAC1C,CAAC,CAAC;;AAEF;AACA,IAAMK,IAAI,GAAGf,OAAO,CAACC,GAAG,CAACc,IAAI,IAAI,IAAI;;AAErC;AACA9B,GAAG,CAAC+B,MAAM,CAACD,IAAI,EAAE,YAAM;EACrBX,OAAO,CAACC,GAAG,kCAAAY,MAAA,CAAkCF,IAAI,CAAE,CAAC;AACtD,CAAC,CAAC","ignoreList":[]}