{"version":3,"file":"models.js","names":["_mongoose","_interopRequireDefault","require","_bcrypt","e","__esModule","Schema","mongoose","thoughtSchema","exports","thoughtName","type","String","required","Description","Emotions","Problems","possibleSolutions","Affirmation","User","Types","ObjectId","ref","created_date","Date","now","userSchema","userName","Password","Email","Thoughts","statics","hashPassword","password","bcrypt","hashSync","methods","validatePassword","compareSync","Thought","model","_default"],"sources":["../../../server/src/models/models.js"],"sourcesContent":["import mongoose from 'mongoose';\r\nimport bcrypt from 'bcrypt';\r\n\r\nconst Schema = mongoose.Schema;\r\n\r\nexport const thoughtSchema = new Schema({\r\n  thoughtName: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  Description: {\r\n    type: String,\r\n    required: false,\r\n  },\r\n  Emotions: {\r\n    type: [String],\r\n  },\r\n  Problems: {\r\n    type: [String],\r\n  },\r\n  possibleSolutions: {\r\n    type: [String],\r\n  },\r\n  Affirmation: {\r\n    type: String,\r\n  },\r\n  User: {\r\n    type: mongoose.Schema.Types.ObjectId,\r\n    ref: 'User',\r\n  },\r\n  created_date: {\r\n    type: Date,\r\n    default: Date.now,\r\n  },\r\n});\r\n\r\nexport const userSchema = new Schema({\r\n  userName: { type: String, required: true },\r\n  Password: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  Email: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  Thoughts: [\r\n    {\r\n      type: mongoose.Schema.Types.ObjectId,\r\n      ref: 'Thought',\r\n    },\r\n  ],\r\n});\r\n\r\n// Adding hashPassword function for hashing passwords\r\nuserSchema.statics.hashPassword = (password) => {\r\n  return bcrypt.hashSync(password, 10);\r\n};\r\n\r\n// Adding validatePassword to compare hashed passwords\r\nuserSchema.methods.validatePassword = function (password) {\r\n  return bcrypt.compareSync(password, this.Password);\r\n};\r\n\r\n// Creating the models\r\nconst Thought = mongoose.model('Thought', thoughtSchema);\r\nconst User = mongoose.model('User', userSchema);\r\n\r\nexport default { Thought, User };\r\n"],"mappings":";;;;;;AAAA,IAAAA,SAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,OAAA,GAAAF,sBAAA,CAAAC,OAAA;AAA4B,SAAAD,uBAAAG,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,gBAAAA,CAAA;AAE5B,IAAME,MAAM,GAAGC,oBAAQ,CAACD,MAAM;AAEvB,IAAME,aAAa,GAAAC,OAAA,CAAAD,aAAA,GAAG,IAAIF,MAAM,CAAC;EACtCI,WAAW,EAAE;IACXC,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE;EACZ,CAAC;EACDC,WAAW,EAAE;IACXH,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE;EACZ,CAAC;EACDE,QAAQ,EAAE;IACRJ,IAAI,EAAE,CAACC,MAAM;EACf,CAAC;EACDI,QAAQ,EAAE;IACRL,IAAI,EAAE,CAACC,MAAM;EACf,CAAC;EACDK,iBAAiB,EAAE;IACjBN,IAAI,EAAE,CAACC,MAAM;EACf,CAAC;EACDM,WAAW,EAAE;IACXP,IAAI,EAAEC;EACR,CAAC;EACDO,IAAI,EAAE;IACJR,IAAI,EAAEJ,oBAAQ,CAACD,MAAM,CAACc,KAAK,CAACC,QAAQ;IACpCC,GAAG,EAAE;EACP,CAAC;EACDC,YAAY,EAAE;IACZZ,IAAI,EAAEa,IAAI;IACV,WAASA,IAAI,CAACC;EAChB;AACF,CAAC,CAAC;AAEK,IAAMC,UAAU,GAAAjB,OAAA,CAAAiB,UAAA,GAAG,IAAIpB,MAAM,CAAC;EACnCqB,QAAQ,EAAE;IAAEhB,IAAI,EAAEC,MAAM;IAAEC,QAAQ,EAAE;EAAK,CAAC;EAC1Ce,QAAQ,EAAE;IACRjB,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE;EACZ,CAAC;EACDgB,KAAK,EAAE;IACLlB,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE;EACZ,CAAC;EACDiB,QAAQ,EAAE,CACR;IACEnB,IAAI,EAAEJ,oBAAQ,CAACD,MAAM,CAACc,KAAK,CAACC,QAAQ;IACpCC,GAAG,EAAE;EACP,CAAC;AAEL,CAAC,CAAC;;AAEF;AACAI,UAAU,CAACK,OAAO,CAACC,YAAY,GAAG,UAACC,QAAQ,EAAK;EAC9C,OAAOC,kBAAM,CAACC,QAAQ,CAACF,QAAQ,EAAE,EAAE,CAAC;AACtC,CAAC;;AAED;AACAP,UAAU,CAACU,OAAO,CAACC,gBAAgB,GAAG,UAAUJ,QAAQ,EAAE;EACxD,OAAOC,kBAAM,CAACI,WAAW,CAACL,QAAQ,EAAE,IAAI,CAACL,QAAQ,CAAC;AACpD,CAAC;;AAED;AACA,IAAMW,OAAO,GAAGhC,oBAAQ,CAACiC,KAAK,CAAC,SAAS,EAAEhC,aAAa,CAAC;AACxD,IAAMW,IAAI,GAAGZ,oBAAQ,CAACiC,KAAK,CAAC,MAAM,EAAEd,UAAU,CAAC;AAAC,IAAAe,QAAA,GAAAhC,OAAA,cAEjC;EAAE8B,OAAO,EAAPA,OAAO;EAAEpB,IAAI,EAAJA;AAAK,CAAC","ignoreList":[]}