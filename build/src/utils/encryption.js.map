{"version":3,"file":"encryption.js","names":["_crypto","_interopRequireDefault","require","_dotenv","e","__esModule","dotenv","config","algorithm","key","Buffer","from","process","env","ENCRYPTION_KEY","encrypt","text","iv","crypto","randomBytes","cipher","createCipheriv","encrypted","update","toString","decrypt","textParts","split","shift","encryptedText","join","decipher","createDecipheriv","decrypted","error","console"],"sources":["../../../server/src/utils/encryption.js"],"sourcesContent":["import crypto from 'crypto';\r\nimport dotenv from 'dotenv';\r\ndotenv.config();\r\n\r\nconst algorithm = 'aes-256-ctr';\r\nconst key = Buffer.from(process.env.ENCRYPTION_KEY, 'hex');\r\n\r\nexport function encrypt(text) {\r\n  let iv = crypto.randomBytes(16);\r\n\r\n  let cipher = crypto.createCipheriv(algorithm, key, iv);\r\n\r\n  // Encrypt the text\r\n  let encrypted = cipher.update(text, 'utf8', 'hex');\r\n  encrypted += cipher.final('hex'); // Finalize the encryption\r\n\r\n  // Return the IV and encrypted text combined\r\n  return Buffer.from(iv).toString('hex') + '|' + encrypted;\r\n}\r\n\r\nexport function decrypt(text) {\r\n  let textParts = text.split('|');\r\n  let iv = Buffer.from(textParts.shift(), 'hex'); // Extract the iv from the string\r\n  let encryptedText = Buffer.from(textParts.join('|'), 'hex');\r\n\r\n  try {\r\n    let decipher = crypto.createDecipheriv(algorithm, key, iv);\r\n\r\n    // decrypt the text\r\n    let decrypted = decipher.update(encryptedText, 'hex', 'utf8');\r\n    decrypted += decipher.final('utf8'); // Finalize the decryption process\r\n    return decrypted; // Return the decrypted text\r\n  } catch (error) {\r\n    console.error('Decryption failed:', error);\r\n    return null; // Or handle the error as needed\r\n  }\r\n  //   let decipher = crypto.createDecipheriv(algorithm, key, iv);\r\n  //   let decrypted = decipher.update(encryptedText, 'hex', 'utf8');\r\n  //   decrypted += decipher.final('utf8'); // Finalize the decryption process\r\n  //   return decrypted.toString();\r\n}\r\n"],"mappings":";;;;;;;AAAA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,OAAA,GAAAF,sBAAA,CAAAC,OAAA;AAA4B,SAAAD,uBAAAG,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,gBAAAA,CAAA;AAC5BE,kBAAM,CAACC,MAAM,CAAC,CAAC;AAEf,IAAMC,SAAS,GAAG,aAAa;AAC/B,IAAMC,GAAG,GAAGC,MAAM,CAACC,IAAI,CAACC,OAAO,CAACC,GAAG,CAACC,cAAc,EAAE,KAAK,CAAC;AAEnD,SAASC,OAAOA,CAACC,IAAI,EAAE;EAC5B,IAAIC,EAAE,GAAGC,kBAAM,CAACC,WAAW,CAAC,EAAE,CAAC;EAE/B,IAAIC,MAAM,GAAGF,kBAAM,CAACG,cAAc,CAACb,SAAS,EAAEC,GAAG,EAAEQ,EAAE,CAAC;;EAEtD;EACA,IAAIK,SAAS,GAAGF,MAAM,CAACG,MAAM,CAACP,IAAI,EAAE,MAAM,EAAE,KAAK,CAAC;EAClDM,SAAS,IAAIF,MAAM,SAAM,CAAC,KAAK,CAAC,CAAC,CAAC;;EAElC;EACA,OAAOV,MAAM,CAACC,IAAI,CAACM,EAAE,CAAC,CAACO,QAAQ,CAAC,KAAK,CAAC,GAAG,GAAG,GAAGF,SAAS;AAC1D;AAEO,SAASG,OAAOA,CAACT,IAAI,EAAE;EAC5B,IAAIU,SAAS,GAAGV,IAAI,CAACW,KAAK,CAAC,GAAG,CAAC;EAC/B,IAAIV,EAAE,GAAGP,MAAM,CAACC,IAAI,CAACe,SAAS,CAACE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;EAChD,IAAIC,aAAa,GAAGnB,MAAM,CAACC,IAAI,CAACe,SAAS,CAACI,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC;EAE3D,IAAI;IACF,IAAIC,QAAQ,GAAGb,kBAAM,CAACc,gBAAgB,CAACxB,SAAS,EAAEC,GAAG,EAAEQ,EAAE,CAAC;;IAE1D;IACA,IAAIgB,SAAS,GAAGF,QAAQ,CAACR,MAAM,CAACM,aAAa,EAAE,KAAK,EAAE,MAAM,CAAC;IAC7DI,SAAS,IAAIF,QAAQ,SAAM,CAAC,MAAM,CAAC,CAAC,CAAC;IACrC,OAAOE,SAAS,CAAC,CAAC;EACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,OAAO,IAAI,CAAC,CAAC;EACf;EACA;EACA;EACA;EACA;AACF","ignoreList":[]}